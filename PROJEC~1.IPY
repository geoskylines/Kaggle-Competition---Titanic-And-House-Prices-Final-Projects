{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Project House Prices - Phat Tran.ipynb","version":"0.3.2","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"74e8feZ6DlnC","colab_type":"text"},"cell_type":"markdown","source":["**Part II: House Prices**\n"," \n","* Addressing missing data.\n","* Feature engineering: including creating new variables, transforming/grouping existing variables.\n","* Multiple submissions showing improvement of your prediction over time. Improvements can come from adding/removing/transforming variables, using different methods, fine tuning your method.\n","* Fine tuning hyperparameters, even if this leads to a worse prediction.\n","* Explanation of hyperparameters used in fine tuning the model.\n","* Explanation of each method (e.g., random forest).\n","* Description of what you are doing and why throughout the notebook. You shouldn't have pages of code and output without explanation.\n","* Notebook hygiene: remove non-working and unnecessary code and code cells, add comments to your code if necessary\n","\n","**Note: Model Training and Tuning**\n","\n","* Decision Tree (no need to create the actual decision tree with graphviz)\n","* Random Forests\n","* Regularized linear regression - ridge\n","* Regularized linear regression - lasso\n","* XGboost\n"]},{"metadata":{"id":"NcEN02TDIcdM","colab_type":"text"},"cell_type":"markdown","source":["Loading the libraries & dataframes"]},{"metadata":{"id":"rxxPZ-i43Lp0","colab_type":"code","colab":{}},"cell_type":"code","source":["# load the libraries\n","\n","# pandas\n","import pandas as pd\n","from pandas import Series,DataFrame\n","\n","# to download files from Colab to our computer\n","from google.colab import files\n","\n","# import GridSearchCV for fine-tuning\n","from sklearn.model_selection import GridSearchCV\n","\n","# load the data to dataframes\n","train_df = pd.read_csv(\"https://s3.amazonaws.com/it4ba/Kaggle/train.csv\")\n","test_df    = pd.read_csv(\"https://s3.amazonaws.com/it4ba/Kaggle/test.csv\")\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"uZc34JOft3zf","colab_type":"text"},"cell_type":"markdown","source":["Description of the information in the train_df dataset"]},{"metadata":{"id":"v79DjMFs3Xyp","colab_type":"code","outputId":"88f114e5-54b3-479a-e72c-61f0af193f3b","executionInfo":{"status":"ok","timestamp":1544785175188,"user_tz":300,"elapsed":1316,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":1545}},"cell_type":"code","source":["# get to know the data\n","train_df.info()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1460 entries, 0 to 1459\n","Data columns (total 81 columns):\n","Id               1460 non-null int64\n","MSSubClass       1460 non-null int64\n","MSZoning         1460 non-null object\n","LotFrontage      1201 non-null float64\n","LotArea          1460 non-null int64\n","Street           1460 non-null object\n","Alley            91 non-null object\n","LotShape         1460 non-null object\n","LandContour      1460 non-null object\n","Utilities        1460 non-null object\n","LotConfig        1460 non-null object\n","LandSlope        1460 non-null object\n","Neighborhood     1460 non-null object\n","Condition1       1460 non-null object\n","Condition2       1460 non-null object\n","BldgType         1460 non-null object\n","HouseStyle       1460 non-null object\n","OverallQual      1460 non-null int64\n","OverallCond      1460 non-null int64\n","YearBuilt        1460 non-null int64\n","YearRemodAdd     1460 non-null int64\n","RoofStyle        1460 non-null object\n","RoofMatl         1460 non-null object\n","Exterior1st      1460 non-null object\n","Exterior2nd      1460 non-null object\n","MasVnrType       1452 non-null object\n","MasVnrArea       1452 non-null float64\n","ExterQual        1460 non-null object\n","ExterCond        1460 non-null object\n","Foundation       1460 non-null object\n","BsmtQual         1423 non-null object\n","BsmtCond         1423 non-null object\n","BsmtExposure     1422 non-null object\n","BsmtFinType1     1423 non-null object\n","BsmtFinSF1       1460 non-null int64\n","BsmtFinType2     1422 non-null object\n","BsmtFinSF2       1460 non-null int64\n","BsmtUnfSF        1460 non-null int64\n","TotalBsmtSF      1460 non-null int64\n","Heating          1460 non-null object\n","HeatingQC        1460 non-null object\n","CentralAir       1460 non-null object\n","Electrical       1459 non-null object\n","1stFlrSF         1460 non-null int64\n","2ndFlrSF         1460 non-null int64\n","LowQualFinSF     1460 non-null int64\n","GrLivArea        1460 non-null int64\n","BsmtFullBath     1460 non-null int64\n","BsmtHalfBath     1460 non-null int64\n","FullBath         1460 non-null int64\n","HalfBath         1460 non-null int64\n","BedroomAbvGr     1460 non-null int64\n","KitchenAbvGr     1460 non-null int64\n","KitchenQual      1460 non-null object\n","TotRmsAbvGrd     1460 non-null int64\n","Functional       1460 non-null object\n","Fireplaces       1460 non-null int64\n","FireplaceQu      770 non-null object\n","GarageType       1379 non-null object\n","GarageYrBlt      1379 non-null float64\n","GarageFinish     1379 non-null object\n","GarageCars       1460 non-null int64\n","GarageArea       1460 non-null int64\n","GarageQual       1379 non-null object\n","GarageCond       1379 non-null object\n","PavedDrive       1460 non-null object\n","WoodDeckSF       1460 non-null int64\n","OpenPorchSF      1460 non-null int64\n","EnclosedPorch    1460 non-null int64\n","3SsnPorch        1460 non-null int64\n","ScreenPorch      1460 non-null int64\n","PoolArea         1460 non-null int64\n","PoolQC           7 non-null object\n","Fence            281 non-null object\n","MiscFeature      54 non-null object\n","MiscVal          1460 non-null int64\n","MoSold           1460 non-null int64\n","YrSold           1460 non-null int64\n","SaleType         1460 non-null object\n","SaleCondition    1460 non-null object\n","SalePrice        1460 non-null int64\n","dtypes: float64(3), int64(35), object(43)\n","memory usage: 924.0+ KB\n"],"name":"stdout"}]},{"metadata":{"id":"w-fjRgcS5Teq","colab_type":"code","outputId":"1be17f09-e134-4b75-adeb-1af02e499c3c","executionInfo":{"status":"ok","timestamp":1544785181824,"user_tz":300,"elapsed":337,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":176}},"cell_type":"code","source":["# checking out year built variable...is there a difference between a house built in 1941 and in 1942? if yes, then keep it; if no, then treat it\n","train_df['YearBuilt'].describe()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1460.000000\n","mean     1971.267808\n","std        30.202904\n","min      1872.000000\n","25%      1954.000000\n","50%      1973.000000\n","75%      2000.000000\n","max      2010.000000\n","Name: YearBuilt, dtype: float64"]},"metadata":{"tags":[]},"execution_count":3}]},{"metadata":{"id":"WHI_lUJhuIo_","colab_type":"text"},"cell_type":"markdown","source":["Histogram Chart of the train_df based on 'Sales Price'"]},{"metadata":{"id":"ebg8FJfx5U_q","colab_type":"code","outputId":"6ca4157c-e156-449e-b0a3-736a8fd23e49","executionInfo":{"status":"ok","timestamp":1544785184268,"user_tz":300,"elapsed":482,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":364}},"cell_type":"code","source":["# sale Price Histogram...seems like there are couple outliers (very expensive houses)\n","train_df['SalePrice'].plot.hist()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f403f822ef0>"]},"metadata":{"tags":[]},"execution_count":4},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<matplotlib.figure.Figure at 0x7f405d086f98>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"RfAB6J-hubQL","colab_type":"text"},"cell_type":"markdown","source":["Describing the count of missing data on the 'FirepalceQu' on the train_df dataset"]},{"metadata":{"id":"vh07RotG5bpd","colab_type":"code","outputId":"1da20ce9-014d-48c4-f2c8-4774cef7abb4","executionInfo":{"status":"ok","timestamp":1544785186459,"user_tz":300,"elapsed":311,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["# missing data on fireplace quality...but do we need this variable?\n","train_df['FireplaceQu'].isna().sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["690"]},"metadata":{"tags":[]},"execution_count":5}]},{"metadata":{"id":"h2YMGpE05dya","colab_type":"code","colab":{}},"cell_type":"code","source":["# Building the model based on year build and overall quality on the dataset\n","X_train = train_df[[\"YearBuilt\", \"OverallQual\"]]\n","Y_train = train_df[\"SalePrice\"]\n","X_test  = test_df[[\"YearBuilt\", \"OverallQual\"]]\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"1j1peHPz4J3v","colab_type":"text"},"cell_type":"markdown","source":["**1. Decision Tree**\n","\n"]},{"metadata":{"id":"XhW0bNpX37mS","colab_type":"code","colab":{}},"cell_type":"code","source":["# load decision tree method\n","from sklearn.tree import DecisionTreeClassifier"],"execution_count":0,"outputs":[]},{"metadata":{"id":"riIp2AIJ6v-6","colab_type":"text"},"cell_type":"markdown","source":["Fitting the X_train & Y_train in the dataset"]},{"metadata":{"id":"QBaOHtum4gGE","colab_type":"code","outputId":"36480213-b03f-4c4a-f2c0-100f280ce05e","executionInfo":{"status":"error","timestamp":1544831137513,"user_tz":300,"elapsed":315,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":203}},"cell_type":"code","source":["# train and predict \n","dt = DecisionTreeClassifier (random_state = 1)\n","\n","dt.fit(X_train, Y_train)"],"execution_count":4,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-38a2aa183684>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mdt\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDecisionTreeClassifier\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mrandom_state\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'x_train' is not defined"]}]},{"metadata":{"id":"eqvX4_2y5Th9","colab_type":"text"},"cell_type":"markdown","source":["Train & Predict the X_test"]},{"metadata":{"id":"fylPGLfg5Kqu","colab_type":"code","outputId":"79af12e2-0f03-45f8-cbb7-3662222be14c","executionInfo":{"status":"error","timestamp":1544831153556,"user_tz":300,"elapsed":315,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":167}},"cell_type":"code","source":["# train and predict \n","Y_pred = dt.predict(X_test)"],"execution_count":5,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-54552f9d0ad4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mY_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'X_test' is not defined"]}]},{"metadata":{"id":"Fp1MGWicvCUG","colab_type":"text"},"cell_type":"markdown","source":["Uploading the HousePrice-dt1.csv file onto the computer to submit for kaggle competition"]},{"metadata":{"id":"XYRchNX05u5e","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"outputId":"8ff01551-25a7-4117-e629-7eaf46bd1fc7","executionInfo":{"status":"error","timestamp":1544831155812,"user_tz":300,"elapsed":382,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}}},"cell_type":"code","source":["# prepare a submission file\n","submission = pd.DataFrame({\n","        \"Id\": test_df[\"Id\"],\n","        \"SalePrice\": Y_pred\n","    })\n","submission.to_csv('HousePrices-Decsision Tree-1-dt1.csv', index=False)\n","\n","files.download('HousePrices-Decsision Tree-1-dt1.csv')"],"execution_count":6,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-a9f27b3b8a60>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m submission = pd.DataFrame({\n\u001b[0m\u001b[1;32m      2\u001b[0m         \u001b[0;34m\"Id\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtest_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m         \u001b[0;34m\"SalePrice\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mY_pred\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     })\n\u001b[1;32m      5\u001b[0m \u001b[0msubmission\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'HousePrices-Decsision Tree-1-dt1.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"metadata":{"id":"v82Hy-NhF75Q","colab_type":"text"},"cell_type":"markdown","source":["Kaggle Score: 0.34990"]},{"metadata":{"id":"RbXWKEgtCCAw","colab_type":"text"},"cell_type":"markdown","source":["**2. Fine Tuning Hyperparameters - Using decision tree method**"]},{"metadata":{"id":"CtJyID3NvUqK","colab_type":"text"},"cell_type":"markdown","source":["Description on the hyperparameters of the decision tree method"]},{"metadata":{"id":"Iv-KLsbQGa92","colab_type":"code","outputId":"f5145664-3bd8-4f93-c4ef-55a9c918606a","executionInfo":{"status":"ok","timestamp":1544831158496,"user_tz":300,"elapsed":325,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"cell_type":"code","source":["# check out the hyperparameters of decision tree method\n","print(dt.get_params())"],"execution_count":7,"outputs":[{"output_type":"stream","text":["{'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': False, 'random_state': 1, 'splitter': 'best'}\n"],"name":"stdout"}]},{"metadata":{"id":"cS49E-0KvgkG","colab_type":"text"},"cell_type":"markdown","source":["* Fine-turning the values in the DecisionTreeClassifier\n","* Fitting the X_train & Y_train in the dataset"]},{"metadata":{"id":"kCNtfSIXGkU4","colab_type":"code","cellView":"both","outputId":"98063098-de79-4022-d1b0-ebe5d976f5f6","executionInfo":{"status":"error","timestamp":1544831161341,"user_tz":300,"elapsed":327,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":203}},"cell_type":"code","source":["#@title Default title text\n","# fine-tuning one value at a time\n","dt = DecisionTreeClassifier (max_depth=3,\n","                             min_samples_leaf=0.04,\n","                             max_features= 0.04,\n","                             random_state = 1)\n","\n","dt.fit(X_train, Y_train)"],"execution_count":8,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-cf6241e78219>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m                              random_state = 1)\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'X_train' is not defined"]}]},{"metadata":{"id":"VCt0SN8BEQ1x","colab_type":"text"},"cell_type":"markdown","source":["**3. Grid Seach**"]},{"metadata":{"id":"nGa8YMPb1_HN","colab_type":"text"},"cell_type":"markdown","source":["Import GridSearchCV & Defining of the hyperparameters"]},{"metadata":{"id":"W3bnMTgxCN_0","colab_type":"code","colab":{}},"cell_type":"code","source":["# Import GridSearchCV\n","from sklearn.model_selection import GridSearchCV\n","\n","# Define your grid of hyperparameters\n","params_dt = {\n","'max_depth': [3, 4, 5, 6],\n","'min_samples_leaf': [0.04, 0.06, 0.08],\n","'max_features': [0.2, 0.4,0.6, 0.8]\n","}\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"uUu5I4He3OF1","colab_type":"text"},"cell_type":"markdown","source":["Setting 10-folds to CV grid search"]},{"metadata":{"id":"k8OhedKP20R9","colab_type":"code","colab":{}},"cell_type":"code","source":["# Start a 10-fold CV grid search \n","grid_dt = GridSearchCV(estimator=dt,\n","param_grid=params_dt,\n","scoring='accuracy',\n","cv=10,\n","n_jobs=-1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Aly_O2vS3Zcs","colab_type":"text"},"cell_type":"markdown","source":["* Fitting the X_train & Y_train in the dataset\n","* Predict the best Estimators"]},{"metadata":{"id":"tuvxbl8REZYj","colab_type":"code","outputId":"7058e5d4-c4a6-4130-c175-f70f643de258","executionInfo":{"status":"error","timestamp":1544831168322,"user_tz":300,"elapsed":314,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":238}},"cell_type":"code","source":["#Fit 'grid_dt' to the training data\n","grid_dt.fit(X_train, Y_train)\n","\n","\n","# predict with the best estimators\n","Y_pred = grid_dt.best_estimator_.predict(X_test)"],"execution_count":11,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-f9cbba127a16>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgrid_dt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# predict with the best estimators\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mY_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid_dt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_estimator_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train' is not defined"]}]},{"metadata":{"id":"cR8ltuxBCuht","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"outputId":"da61db12-7956-4cbc-f371-df1c88c014ea","executionInfo":{"status":"error","timestamp":1544831177457,"user_tz":300,"elapsed":421,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}}},"cell_type":"code","source":["# prepare the submission file\n","submission = pd.DataFrame({\n","        \"Id\": test_df[\"Id\"],\n","        \"SalePrice\": Y_pred\n","    })\n","submission.to_csv('HousePrices-dt2.csv', index=False)\n","\n","files.download('HousePrices-dt2.csv')"],"execution_count":12,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-dd42a6b92818>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m submission = pd.DataFrame({\n\u001b[0m\u001b[1;32m      2\u001b[0m         \u001b[0;34m\"Id\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtest_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m         \u001b[0;34m\"SalePrice\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mY_pred\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     })\n\u001b[1;32m      5\u001b[0m \u001b[0msubmission\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'HousePrices-dt2.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"metadata":{"id":"bVKTweIQIJRl","colab_type":"text"},"cell_type":"markdown","source":["Kaggle Score: 0.27559"]},{"metadata":{"id":"o3c86i_HHINu","colab_type":"text"},"cell_type":"markdown","source":["**4. Random Forest**"]},{"metadata":{"id":"vhWVIliyHHSh","colab_type":"code","colab":{}},"cell_type":"code","source":["#import RandomForestClassifier from sklearn.ensemble\n","from sklearn.ensemble import RandomForestClassifier\n","\n","#set n_estimators = 100 for the RandomForestClassifier - Then assigning RandomForestClassifier toward rf variable\n","rf = RandomForestClassifier(n_estimators=100)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Unpl_oELEtuF","colab_type":"text"},"cell_type":"markdown","source":["* Fitting the X_train & Y_train in the dataset\n","* Score the X_train & Y_train in the dataset"]},{"metadata":{"id":"gJIHINNYNU-n","colab_type":"code","outputId":"7f6e903f-fdb9-442f-d6e9-3ec5b1131424","executionInfo":{"status":"error","timestamp":1544831182303,"user_tz":300,"elapsed":322,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":221}},"cell_type":"code","source":["rf.fit(X_train, Y_train)\n","Y_pred = rf.predict(X_test)\n","\n","dt.score(X_train, Y_train, sample_weight=None)"],"execution_count":14,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-c204f2dac9aa>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mrf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mY_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train' is not defined"]}]},{"metadata":{"id":"iR9KXMSrHLLo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":238},"outputId":"c1c3b2eb-f437-4c44-c41f-15506f6fb1db","executionInfo":{"status":"error","timestamp":1544831183962,"user_tz":300,"elapsed":346,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}}},"cell_type":"code","source":["# prepare the submission file\n","submission = pd.DataFrame({\n","        \"Id\": test_df[\"Id\"],\n","        \"SalePrice\": Y_pred\n","    })\n","submission.to_csv('HousePrices-RandomForest-rf1.csv', index=False)\n","\n","files.download('HousePrices-RandomForest-rf1.csv')"],"execution_count":15,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-6b1b08c86858>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m submission = pd.DataFrame({\n\u001b[0m\u001b[1;32m      2\u001b[0m         \u001b[0;34m\"Id\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtest_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Id\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m         \u001b[0;34m\"SalePrice\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mY_pred\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     })\n\u001b[1;32m      5\u001b[0m \u001b[0msubmission\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'HousePrices-RandomForest-rf1.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"metadata":{"id":"NtTq94mmHzii","colab_type":"text"},"cell_type":"markdown","source":["Kaggle score: 0.27559"]},{"metadata":{"id":"vebYr_T_FTm8","colab_type":"text"},"cell_type":"markdown","source":["**5. Fine Turning hyperparameters**"]},{"metadata":{"id":"S6MDDnjJF1hL","colab_type":"text"},"cell_type":"markdown","source":["Check the random forest hyperparameters"]},{"metadata":{"id":"mraHdpzRFwRQ","colab_type":"code","outputId":"fd217de8-65cb-4890-c609-0b6712d60624","executionInfo":{"status":"ok","timestamp":1544831188206,"user_tz":300,"elapsed":349,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"cell_type":"code","source":["# check out random forest hyperparameters\n","print(rf.get_params())"],"execution_count":16,"outputs":[{"output_type":"stream","text":["{'bootstrap': True, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': None, 'oob_score': False, 'random_state': None, 'verbose': 0, 'warm_start': False}\n"],"name":"stdout"}]},{"metadata":{"id":"d27dkbWpF9rX","colab_type":"text"},"cell_type":"markdown","source":["Import GridSearchCV from the libraries"]},{"metadata":{"id":"o5Ts6_DnF8ro","colab_type":"code","colab":{}},"cell_type":"code","source":["# import GridSearchCV\n","from sklearn.model_selection import GridSearchCV"],"execution_count":0,"outputs":[]},{"metadata":{"id":"M428cd0bGMha","colab_type":"text"},"cell_type":"markdown","source":["Defining the grid of hyperparameters"]},{"metadata":{"id":"yFtCaZBmGLFU","colab_type":"code","colab":{}},"cell_type":"code","source":["# define your grid of hyperparameters\n","params_rf = {\n","'n_estimators': [1,3, 5, 10],\n","'max_depth': [2, 3, 4, 5, 20, 32],\n","'min_samples_leaf': [1, 5, 8 , 3],\n","'max_features': ['log2', 'sqrt']\n","}"],"execution_count":0,"outputs":[]},{"metadata":{"id":"2Fs34m8yGSFl","colab_type":"text"},"cell_type":"markdown","source":["Creating 10-fold for CV grid search"]},{"metadata":{"id":"4g1WlKqoGQTO","colab_type":"code","colab":{}},"cell_type":"code","source":["# start a 10-fold CV grid search\n","grid_rf = GridSearchCV(estimator=rf,\n","param_grid=params_rf,\n","scoring='accuracy',\n","cv=25,\n","n_jobs=-1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"o2nHel5wGcAG","colab_type":"text"},"cell_type":"markdown","source":["* Fitting the X_train & Y_train in the database\n","* predicting the dataset for X_test"]},{"metadata":{"id":"zSxGrv0mGa7g","colab_type":"code","outputId":"bda8f13e-e18c-4798-fec6-ab27f27a03f1","executionInfo":{"status":"error","timestamp":1544831197211,"user_tz":300,"elapsed":346,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":185}},"cell_type":"code","source":["# fit 'grid_dt' to the training data\n","# training our model may take a while!\n","grid_rf.fit(X_train, Y_train)\n","Y_pred = grid_rf.best_estimator_.predict(X_test)"],"execution_count":20,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-fd328fcddec8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgrid_rf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mY_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid_rf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_estimator_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train' is not defined"]}]},{"metadata":{"id":"WbVCiHwMGzHu","colab_type":"text"},"cell_type":"markdown","source":["Checking the best hyperparameter values"]},{"metadata":{"id":"02EE_LkFGyP2","colab_type":"code","outputId":"59afbfa0-6eeb-456d-a966-9a9759af6ae1","executionInfo":{"status":"error","timestamp":1544785258910,"user_tz":300,"elapsed":366,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":167}},"cell_type":"code","source":["# check the best hyperparameter values\n","grid_rf.best_params_"],"execution_count":0,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-24-d52148365a5d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgrid_rf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_params_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'GridSearchCV' object has no attribute 'best_params_'"]}]},{"metadata":{"id":"BM2vaEanHURj","colab_type":"text"},"cell_type":"markdown","source":["Uploading the 'HousePrices - Fine Turning Hyperameters 2-rf2.csv' file to the computer to submit to Kaggle competition"]},{"metadata":{"id":"t8DNqVe5G7YU","colab_type":"code","colab":{}},"cell_type":"code","source":["# prepare the submission file\n","submission = pd.DataFrame({\n","        \"Id\": test_df[\"Id\"],\n","        \"SalePrice\": Y_pred\n","    })\n","submission.to_csv('HousePrices -Fine Turning Hyperameters 2-rf2.csv', index=False)\n","\n","files.download('HousePrices -Fine Turning Hyperameters 2-rf2.csv')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"hO1Gw56OQLMl","colab_type":"text"},"cell_type":"markdown","source":["**6. Regularized linear regression**"]},{"metadata":{"id":"FxzMlsBAIiB4","colab_type":"text"},"cell_type":"markdown","source":["* Description of the train_df dataset rows and columns \n","* Note: There is missing data values in PoolQC, Fence & MiscFeature"]},{"metadata":{"id":"01nA-1GeSWsb","colab_type":"code","outputId":"60764e46-2dd3-4efc-f1fd-1fdf40e91588","executionInfo":{"status":"ok","timestamp":1544785264609,"user_tz":300,"elapsed":313,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":226}},"cell_type":"code","source":["#getting familiar with the dataset information with rows & columns\n","train_df.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>MSSubClass</th>\n","      <th>MSZoning</th>\n","      <th>LotFrontage</th>\n","      <th>LotArea</th>\n","      <th>Street</th>\n","      <th>Alley</th>\n","      <th>LotShape</th>\n","      <th>LandContour</th>\n","      <th>Utilities</th>\n","      <th>...</th>\n","      <th>PoolArea</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","      <th>SalePrice</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>65.0</td>\n","      <td>8450</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>208500</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>RL</td>\n","      <td>80.0</td>\n","      <td>9600</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>2007</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>181500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>68.0</td>\n","      <td>11250</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>223500</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>70</td>\n","      <td>RL</td>\n","      <td>60.0</td>\n","      <td>9550</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2006</td>\n","      <td>WD</td>\n","      <td>Abnorml</td>\n","      <td>140000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>84.0</td>\n","      <td>14260</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>2008</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","      <td>250000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 81 columns</p>\n","</div>"],"text/plain":["   Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n","0   1          60       RL         65.0     8450   Pave   NaN      Reg   \n","1   2          20       RL         80.0     9600   Pave   NaN      Reg   \n","2   3          60       RL         68.0    11250   Pave   NaN      IR1   \n","3   4          70       RL         60.0     9550   Pave   NaN      IR1   \n","4   5          60       RL         84.0    14260   Pave   NaN      IR1   \n","\n","  LandContour Utilities    ...     PoolArea PoolQC Fence MiscFeature MiscVal  \\\n","0         Lvl    AllPub    ...            0    NaN   NaN         NaN       0   \n","1         Lvl    AllPub    ...            0    NaN   NaN         NaN       0   \n","2         Lvl    AllPub    ...            0    NaN   NaN         NaN       0   \n","3         Lvl    AllPub    ...            0    NaN   NaN         NaN       0   \n","4         Lvl    AllPub    ...            0    NaN   NaN         NaN       0   \n","\n","  MoSold YrSold  SaleType  SaleCondition  SalePrice  \n","0      2   2008        WD         Normal     208500  \n","1      5   2007        WD         Normal     181500  \n","2      9   2008        WD         Normal     223500  \n","3      2   2006        WD        Abnorml     140000  \n","4     12   2008        WD         Normal     250000  \n","\n","[5 rows x 81 columns]"]},"metadata":{"tags":[]},"execution_count":26}]},{"metadata":{"id":"C8UsImjZJqo9","colab_type":"text"},"cell_type":"markdown","source":["* Description of the test_df dataset rows and columns\n","* Note: There is missing data values in Alley, PoolQC, Fence & MiscFeature"]},{"metadata":{"id":"ThlRx54mJK8E","colab_type":"code","outputId":"43ed5af9-d65d-4665-9869-3d83a890d4ce","executionInfo":{"status":"ok","timestamp":1544785267332,"user_tz":300,"elapsed":363,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":226}},"cell_type":"code","source":["#getting familiar with the dataset information with rows & columns\n","test_df.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>MSSubClass</th>\n","      <th>MSZoning</th>\n","      <th>LotFrontage</th>\n","      <th>LotArea</th>\n","      <th>Street</th>\n","      <th>Alley</th>\n","      <th>LotShape</th>\n","      <th>LandContour</th>\n","      <th>Utilities</th>\n","      <th>...</th>\n","      <th>ScreenPorch</th>\n","      <th>PoolArea</th>\n","      <th>PoolQC</th>\n","      <th>Fence</th>\n","      <th>MiscFeature</th>\n","      <th>MiscVal</th>\n","      <th>MoSold</th>\n","      <th>YrSold</th>\n","      <th>SaleType</th>\n","      <th>SaleCondition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1461</td>\n","      <td>20</td>\n","      <td>RH</td>\n","      <td>80.0</td>\n","      <td>11622</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>Reg</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>120</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1462</td>\n","      <td>20</td>\n","      <td>RL</td>\n","      <td>81.0</td>\n","      <td>14267</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Gar2</td>\n","      <td>12500</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1463</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>74.0</td>\n","      <td>13830</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>MnPrv</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1464</td>\n","      <td>60</td>\n","      <td>RL</td>\n","      <td>78.0</td>\n","      <td>9978</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>Lvl</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1465</td>\n","      <td>120</td>\n","      <td>RL</td>\n","      <td>43.0</td>\n","      <td>5005</td>\n","      <td>Pave</td>\n","      <td>NaN</td>\n","      <td>IR1</td>\n","      <td>HLS</td>\n","      <td>AllPub</td>\n","      <td>...</td>\n","      <td>144</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2010</td>\n","      <td>WD</td>\n","      <td>Normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 80 columns</p>\n","</div>"],"text/plain":["     Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n","0  1461          20       RH         80.0    11622   Pave   NaN      Reg   \n","1  1462          20       RL         81.0    14267   Pave   NaN      IR1   \n","2  1463          60       RL         74.0    13830   Pave   NaN      IR1   \n","3  1464          60       RL         78.0     9978   Pave   NaN      IR1   \n","4  1465         120       RL         43.0     5005   Pave   NaN      IR1   \n","\n","  LandContour Utilities      ...       ScreenPorch PoolArea PoolQC  Fence  \\\n","0         Lvl    AllPub      ...               120        0    NaN  MnPrv   \n","1         Lvl    AllPub      ...                 0        0    NaN    NaN   \n","2         Lvl    AllPub      ...                 0        0    NaN  MnPrv   \n","3         Lvl    AllPub      ...                 0        0    NaN    NaN   \n","4         HLS    AllPub      ...               144        0    NaN    NaN   \n","\n","  MiscFeature MiscVal MoSold  YrSold  SaleType  SaleCondition  \n","0         NaN       0      6    2010        WD         Normal  \n","1        Gar2   12500      6    2010        WD         Normal  \n","2         NaN       0      3    2010        WD         Normal  \n","3         NaN       0      6    2010        WD         Normal  \n","4         NaN       0      1    2010        WD         Normal  \n","\n","[5 rows x 80 columns]"]},"metadata":{"tags":[]},"execution_count":27}]},{"metadata":{"id":"h2ZnXO74I8tL","colab_type":"text"},"cell_type":"markdown","source":["Description of the train_df information inside the dataset"]},{"metadata":{"id":"rGUiHorNS5TN","colab_type":"code","outputId":"effdb45f-c7e9-409b-ff46-9b6c07b26f5c","executionInfo":{"status":"ok","timestamp":1544785269096,"user_tz":300,"elapsed":361,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":1545}},"cell_type":"code","source":["#description of the dataset for train_df\n","train_df.info()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1460 entries, 0 to 1459\n","Data columns (total 81 columns):\n","Id               1460 non-null int64\n","MSSubClass       1460 non-null int64\n","MSZoning         1460 non-null object\n","LotFrontage      1201 non-null float64\n","LotArea          1460 non-null int64\n","Street           1460 non-null object\n","Alley            91 non-null object\n","LotShape         1460 non-null object\n","LandContour      1460 non-null object\n","Utilities        1460 non-null object\n","LotConfig        1460 non-null object\n","LandSlope        1460 non-null object\n","Neighborhood     1460 non-null object\n","Condition1       1460 non-null object\n","Condition2       1460 non-null object\n","BldgType         1460 non-null object\n","HouseStyle       1460 non-null object\n","OverallQual      1460 non-null int64\n","OverallCond      1460 non-null int64\n","YearBuilt        1460 non-null int64\n","YearRemodAdd     1460 non-null int64\n","RoofStyle        1460 non-null object\n","RoofMatl         1460 non-null object\n","Exterior1st      1460 non-null object\n","Exterior2nd      1460 non-null object\n","MasVnrType       1452 non-null object\n","MasVnrArea       1452 non-null float64\n","ExterQual        1460 non-null object\n","ExterCond        1460 non-null object\n","Foundation       1460 non-null object\n","BsmtQual         1423 non-null object\n","BsmtCond         1423 non-null object\n","BsmtExposure     1422 non-null object\n","BsmtFinType1     1423 non-null object\n","BsmtFinSF1       1460 non-null int64\n","BsmtFinType2     1422 non-null object\n","BsmtFinSF2       1460 non-null int64\n","BsmtUnfSF        1460 non-null int64\n","TotalBsmtSF      1460 non-null int64\n","Heating          1460 non-null object\n","HeatingQC        1460 non-null object\n","CentralAir       1460 non-null object\n","Electrical       1459 non-null object\n","1stFlrSF         1460 non-null int64\n","2ndFlrSF         1460 non-null int64\n","LowQualFinSF     1460 non-null int64\n","GrLivArea        1460 non-null int64\n","BsmtFullBath     1460 non-null int64\n","BsmtHalfBath     1460 non-null int64\n","FullBath         1460 non-null int64\n","HalfBath         1460 non-null int64\n","BedroomAbvGr     1460 non-null int64\n","KitchenAbvGr     1460 non-null int64\n","KitchenQual      1460 non-null object\n","TotRmsAbvGrd     1460 non-null int64\n","Functional       1460 non-null object\n","Fireplaces       1460 non-null int64\n","FireplaceQu      770 non-null object\n","GarageType       1379 non-null object\n","GarageYrBlt      1379 non-null float64\n","GarageFinish     1379 non-null object\n","GarageCars       1460 non-null int64\n","GarageArea       1460 non-null int64\n","GarageQual       1379 non-null object\n","GarageCond       1379 non-null object\n","PavedDrive       1460 non-null object\n","WoodDeckSF       1460 non-null int64\n","OpenPorchSF      1460 non-null int64\n","EnclosedPorch    1460 non-null int64\n","3SsnPorch        1460 non-null int64\n","ScreenPorch      1460 non-null int64\n","PoolArea         1460 non-null int64\n","PoolQC           7 non-null object\n","Fence            281 non-null object\n","MiscFeature      54 non-null object\n","MiscVal          1460 non-null int64\n","MoSold           1460 non-null int64\n","YrSold           1460 non-null int64\n","SaleType         1460 non-null object\n","SaleCondition    1460 non-null object\n","SalePrice        1460 non-null int64\n","dtypes: float64(3), int64(35), object(43)\n","memory usage: 924.0+ KB\n"],"name":"stdout"}]},{"metadata":{"id":"aktBNjh7JGJn","colab_type":"text"},"cell_type":"markdown","source":["Description of the test_df information inside the dataset"]},{"metadata":{"id":"bPyykeMJSm36","colab_type":"code","outputId":"66adb8e5-c8c0-48c8-a078-3530222605c3","executionInfo":{"status":"ok","timestamp":1544785273678,"user_tz":300,"elapsed":356,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":1527}},"cell_type":"code","source":["#description of the dataset for test_df\n","test_df.info()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1459 entries, 0 to 1458\n","Data columns (total 80 columns):\n","Id               1459 non-null int64\n","MSSubClass       1459 non-null int64\n","MSZoning         1455 non-null object\n","LotFrontage      1232 non-null float64\n","LotArea          1459 non-null int64\n","Street           1459 non-null object\n","Alley            107 non-null object\n","LotShape         1459 non-null object\n","LandContour      1459 non-null object\n","Utilities        1457 non-null object\n","LotConfig        1459 non-null object\n","LandSlope        1459 non-null object\n","Neighborhood     1459 non-null object\n","Condition1       1459 non-null object\n","Condition2       1459 non-null object\n","BldgType         1459 non-null object\n","HouseStyle       1459 non-null object\n","OverallQual      1459 non-null int64\n","OverallCond      1459 non-null int64\n","YearBuilt        1459 non-null int64\n","YearRemodAdd     1459 non-null int64\n","RoofStyle        1459 non-null object\n","RoofMatl         1459 non-null object\n","Exterior1st      1458 non-null object\n","Exterior2nd      1458 non-null object\n","MasVnrType       1443 non-null object\n","MasVnrArea       1444 non-null float64\n","ExterQual        1459 non-null object\n","ExterCond        1459 non-null object\n","Foundation       1459 non-null object\n","BsmtQual         1415 non-null object\n","BsmtCond         1414 non-null object\n","BsmtExposure     1415 non-null object\n","BsmtFinType1     1417 non-null object\n","BsmtFinSF1       1458 non-null float64\n","BsmtFinType2     1417 non-null object\n","BsmtFinSF2       1458 non-null float64\n","BsmtUnfSF        1458 non-null float64\n","TotalBsmtSF      1458 non-null float64\n","Heating          1459 non-null object\n","HeatingQC        1459 non-null object\n","CentralAir       1459 non-null object\n","Electrical       1459 non-null object\n","1stFlrSF         1459 non-null int64\n","2ndFlrSF         1459 non-null int64\n","LowQualFinSF     1459 non-null int64\n","GrLivArea        1459 non-null int64\n","BsmtFullBath     1457 non-null float64\n","BsmtHalfBath     1457 non-null float64\n","FullBath         1459 non-null int64\n","HalfBath         1459 non-null int64\n","BedroomAbvGr     1459 non-null int64\n","KitchenAbvGr     1459 non-null int64\n","KitchenQual      1458 non-null object\n","TotRmsAbvGrd     1459 non-null int64\n","Functional       1457 non-null object\n","Fireplaces       1459 non-null int64\n","FireplaceQu      729 non-null object\n","GarageType       1383 non-null object\n","GarageYrBlt      1381 non-null float64\n","GarageFinish     1381 non-null object\n","GarageCars       1458 non-null float64\n","GarageArea       1458 non-null float64\n","GarageQual       1381 non-null object\n","GarageCond       1381 non-null object\n","PavedDrive       1459 non-null object\n","WoodDeckSF       1459 non-null int64\n","OpenPorchSF      1459 non-null int64\n","EnclosedPorch    1459 non-null int64\n","3SsnPorch        1459 non-null int64\n","ScreenPorch      1459 non-null int64\n","PoolArea         1459 non-null int64\n","PoolQC           3 non-null object\n","Fence            290 non-null object\n","MiscFeature      51 non-null object\n","MiscVal          1459 non-null int64\n","MoSold           1459 non-null int64\n","YrSold           1459 non-null int64\n","SaleType         1458 non-null object\n","SaleCondition    1459 non-null object\n","dtypes: float64(11), int64(26), object(43)\n","memory usage: 912.0+ KB\n"],"name":"stdout"}]},{"metadata":{"id":"3XbkBMPSSWVZ","colab_type":"text"},"cell_type":"markdown","source":["Histogram graph of how many houses sold for the following years from 2006 to 2010"]},{"metadata":{"id":"u6Z5Q8CZQidS","colab_type":"code","outputId":"eb00694e-2347-48de-8798-6168c3467d72","executionInfo":{"status":"error","timestamp":1544785278663,"user_tz":300,"elapsed":349,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":203}},"cell_type":"code","source":["plt.xlabel('Year Sold',fontsize=16)\n","plt.ylabel('Frequency',fontsize=16)\n","train_df['YrSold'].plot.hist()"],"execution_count":0,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-30-ec0686005d9a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Year Sold'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mfontsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Frequency'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mfontsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m16\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mtrain_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'YrSold'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"]}]},{"metadata":{"id":"kiz2YZDdPWe0","colab_type":"text"},"cell_type":"markdown","source":["Importing Libraries needed to run the LinearRegression"]},{"metadata":{"id":"Q4K7-aJyNJI2","colab_type":"code","colab":{}},"cell_type":"code","source":["#import libraries needed to run the linear regression\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","from sklearn.linear_model import LinearRegression\n","from sklearn.linear_model import Ridge"],"execution_count":0,"outputs":[]},{"metadata":{"id":"o-r2r1JHPcb8","colab_type":"text"},"cell_type":"markdown","source":["* Assign LinearRegression to lr\n","* Fit the dataset of X_train & Y_train"]},{"metadata":{"id":"q93w5yN9NdZk","colab_type":"code","outputId":"ba201300-9c9c-4386-f761-74a97b6cc3de","executionInfo":{"status":"ok","timestamp":1544785284683,"user_tz":300,"elapsed":363,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["#Asssign LinearRegression toward lr\n","lr = LinearRegression()\n","\n","#Fitting X_train & Y_train in lr\n","lr.fit(X_train, Y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n","         normalize=False)"]},"metadata":{"tags":[]},"execution_count":32}]},{"metadata":{"id":"JokXWGa0PkHU","colab_type":"text"},"cell_type":"markdown","source":["Setting the X_test predictions from lr toward Y_pred"]},{"metadata":{"id":"8Chr2E1fOLf9","colab_type":"code","colab":{}},"cell_type":"code","source":["#Predicting X_test in the dataset of lr\n","Y_pred = lr.predict(X_test)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"CklWiX-vPtGA","colab_type":"text"},"cell_type":"markdown","source":["Uploading the 'HousePrices-Linear Regression-lr1.csv' file to submit to Kaggle competition of House Prices"]},{"metadata":{"id":"V-RdC32LOZiC","colab_type":"code","colab":{}},"cell_type":"code","source":["#Submission for the Linear Regression file\n","submission = pd.DataFrame({\n","        \"Id\": test_df[\"Id\"],\n","        \"SalePrice\": Y_pred\n","    })\n","submission.to_csv('HousePrices-Linear Regression-lr1.csv', index=False)\n","\n","files.download('HousePrices-Linear Regression-lr1.csv')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"3QUAQdKILOYq","colab_type":"text"},"cell_type":"markdown","source":["**7. Regularized linear regression - lasso**"]},{"metadata":{"id":"gRaiGXeVapCt","colab_type":"text"},"cell_type":"markdown","source":["Importing the neccessary libraries for the dataset"]},{"metadata":{"id":"opXI4OUdYuqn","colab_type":"code","colab":{}},"cell_type":"code","source":["#import libraries needed to run the linear regression\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","from sklearn.model_selection import cross_val_score\n","from sklearn.linear_model import LinearRegression\n","from sklearn.linear_model import Lasso"],"execution_count":0,"outputs":[]},{"metadata":{"id":"OemjuX3laxxO","colab_type":"text"},"cell_type":"markdown","source":["* Assigning Lasso toward lasso_model variable\n","* Fitting the dataset of X_train & Y_train"]},{"metadata":{"id":"UUiWGZSmY3ll","colab_type":"code","outputId":"c496dd55-7a80-45e8-fae9-000f90b360e5","executionInfo":{"status":"ok","timestamp":1544785292246,"user_tz":300,"elapsed":335,"user":{"displayName":"Phat T Tran","photoUrl":"","userId":"05526002729072716169"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["#Assign Lasso to lasso_model variable\n","lasso_model = Lasso()\n","\n","#Fitting the dataset of the X_train & Y_train in lasso\n","lasso_model.fit(X_train, Y_train)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000,\n","   normalize=False, positive=False, precompute=False, random_state=None,\n","   selection='cyclic', tol=0.0001, warm_start=False)"]},"metadata":{"tags":[]},"execution_count":36}]},{"metadata":{"id":"gQzGKWX9ZsH7","colab_type":"text"},"cell_type":"markdown","source":["Cross Validation Score of the dataset"]},{"metadata":{"id":"kjmBHqWoZes7","colab_type":"code","colab":{}},"cell_type":"code","source":["#Cross Validation Score of the dataset of lasso_model, X_train & Y_train\n","lasso_scores = cross_val_score(lasso_model, X_train, Y_train, scoring=\"neg_mean_squared_error\", cv=20)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"jPgyM0babWdF","colab_type":"text"},"cell_type":"markdown","source":["Assigning prediction of X_test from lasso_model toward Y_pred"]},{"metadata":{"id":"6lzZQshnZ0xQ","colab_type":"code","colab":{}},"cell_type":"code","source":["Y_pred = lasso_model.predict(X_test)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"E6oN2B3LbsVc","colab_type":"code","colab":{}},"cell_type":"code","source":["#Submission for the Lasso Regression file\n","submission = pd.DataFrame({\n","        \"Id\": test_df[\"Id\"],\n","        \"SalePrice\": Y_pred\n","    })\n","submission.to_csv('HousePrices-Lasso-lr1.csv', index=False)\n","\n","files.download('HousePrices-Lasso-lr1.csv')"],"execution_count":0,"outputs":[]}]}